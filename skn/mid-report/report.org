#+TITLE: モジュール分割された日本語対話システムの作成
#+SUBTITLE: 
#+AUTHOR: 江畑 拓哉
# This is a Bibtex reference
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil arch:headline ^:nil
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:nil e:nil email:nil f:t inline:t num:t
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:nil title:t toc:nil todo:t |:t
#+LANGUAGE: ja
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 26.1 (Org mode 9.1.4)
#+LATEX_CLASS: skn
#+LATEX_CLASS_OPTIONS: 
#+LaTeX_CLASS_OPTIONS:
#+LATEX_HEADER:  \addbibresource{reference.bib}
#+DESCRIPTION:
#+KEYWORDS:
#+STARTUP: indent overview inlineimages

#+LATEX: \maketitle
#+LATEX: \pagestyle{empty}

* 序論
　現在世界では様々な目的を持った対話システムが研究されている。対話システムは大きく分けると何からの案内を行うタスク指向のシステム、或いはコミュニケーションを行うことを目的とした非タスク指向のシステムの２つである。そして昨今ではこれらを２つを重ね合わせた研究として、人狼知能と呼ばれているものの研究が盛んであり、また日本語の対話システムとして最も成功している例として、Microsoft社の``りんな''を挙げることが出来る。\\
　本研究ではそれに近くなおかつより低コストなシステムを構築することを目的として、様々な目的を持ったモジュールを作成し組み合わせる手法を提案する。またこのシステムを作成するにあたり、どのようにデータを収集すべきかについても考察を行う。
* 研究概要
** 研究対象とする問題
　本研究で作成するモジュールは以下の通りである。
1. その対話エージェントの性格・ステータスに関する質問に答えるタスク指向の対話を達成するモジュール 
2. 入力文を話題に分類するモジュール
3. 各話題に特化した非タスク指向の対話を達成するモジュール 
4. 上より出力される文に対して性格付けを行うためのスタイル変換を行うモジュール
　またエージェントのステータス更新に関する手法として、入力文、出力文、その他エージェントが得られる情報によってステータス更新を行う手法についても提案する。
** 利用するデータ
　このシステムにおいて必要とするデータは主に二種類である。
- スタイル変換を行うためのデータ\\
  　このデータには、一つにスタイルが付与されていない文と付与された文のペアを集めたものと、スタイルが付与されていない文の群と付与された文の群を用いるものがある。現在の進捗としてはデータ生成の問題から前者を用いている。
- 対話を行うためのデータ\\
  　入力文と出力文のペアを集めたものである。収集手法として、\textcircled{1} 実際に手作りする \textcircled{2} アニメや演劇などから集める \textcircled{3} SNS から集める を行い、特に後者２つについては有効なデータをフィルタリングする手法を研究している。
** それぞれの問題に適用する手法
- 質問に答えるタスク指向のモジュール\\
  　これには単語分割した入力文に対して RNN を適用して質問番号を出力することで、ほとんどの分類を行うことが出来た。しかし単語埋め込みに Word2Vec cite:word2vec のような手法を用いるとより広範囲の文、質問でない文をも検出してしまう問題がある。\\
  　尚回答はステータスを参照して生成するものとする。例えば ``x が好きですか？'' という質問に対して、今までの交された対話等より x についての評価を得るということを想定している。
- 話題に分類するモジュール\\
  　SCDV cite:scdv のような手法や、sentiment analysis で使われる RNN や CNN を用いた手法 cite:cnnsa を検討している。また単語埋め込みとして、 fasttext cite:fasttext や Word2Vec を採用したいと考えている。いずれも十分なサイズのデータを収集できておらず実験が出来ていない。代替としてアニメの台本から入出力のペアを切り出した対話として成立しているデータ、一般的な対話を集めたデータを用いて fasttext のような単語埋め込みを行わずに RNN, CNN を用いた二値分類実験を行い、後者で8割5部ほどの検出をすることが出来た。
- 非タスク指向の対話を達成するモジュール\\
  　日本語でも Sequence to Sequence cite:seq2seq のような手法を用いた様々な取り組みが行われているが、芳しい結果を得られたものは少ない。しかし公開されているデータセットを確認すると、英語のデータセットと比較して、余り有効なデータセットであるようには思えなかった(入力と出力のペアで意味が通らないものがある等)ため、自作の日常会話を集めたデータセットで実験をした所、それなりの精度の実験結果を得ることが出来た。しかしデータ量が少ないため(1k程度)これをいかに増やしていくかが今後の課題である。尚実験として適用した手法は Sequence to Sequence である。
- スタイル変換を行うモジュール\\
  　日本語では英語に比べ、性格によって語尾などが大きく変化する。それは数単語の差ではあるが、これがある程度統一できていないと不自然な対話システムになってしまう。これに対処するため、スタイを付与されていないものと、付与されたもののペアをデータセットとして、 Sequence to better Sequence cite:seq2bseq と、DAE cite:dae から着想を得たそれの一部変更したものと CopyNet cite:dae を用いて実験を行った。結果として前者2つはチューニングが難しい代わりに自然な文を生成することが出来、後者は比較的高速に文を生成できる他にある程度未知語に対応が出来ることがわかった。
- データ収集について\\
  　手打ちに関しては理想的なデータになるように打ち込んでしまっている。つまり、誤字脱字や意味の通らない文を含めないようにしている。アニメや演劇からの収集については、長すぎる文は必要な部分のみにし、専門的過ぎる文は削除している。こちらは著作権などの問題があるため、この対処を調べている。SNS からのデータの収集については Twitter を用いているが、ノイズの多いデータが混じっているため、そのデータクリーニングについて既存の手法 cite:twitercleaning を参考にしながら研究している。
- ステータス更新を行う手法
  - 入力文、出力文
    　極性判定を行い、それらに含まれるキーワードにその点数を加算していく予定である。極性判定については Word2Vec cite:word2vec を用いてそれを加算して求める手法の他、 話題に関するモジュールで用いた CNN を用いた分類 に Word2Vec や fasttext の単語埋め込みを適用した物を実験する予定である。
  - その他
    　単純なゲームを作成し、それに対するスコアを現在の ``気分'' といった部分にアクセスさせて、ステータスを更新する。例えば ``気分'' 項が悪い場合にはスタイル変換モジュールを言い切りの口調、つまり厳しい口調にすることを想定している。
#+LATEX: \printbibliography
